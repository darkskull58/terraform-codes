# Starter pipeline


# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'
- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '11-Azure-Linux-Virtual-Machine/terraform-manifests'
    backendServiceArm: 'ARM_conn'
    backendAzureRmResourceGroupName: 'def_rg'
    backendAzureRmStorageAccountName: 'terrastoragesourish'
    backendAzureRmContainerName: 'terrascripts'
    backendAzureRmKey: 'INaUPnK6JOY2ENVaYrP+ZOXoft0nm5+0nyio1ASyhm4eeI4VRUbpEzfLtrpTDq19ouTcL1y8/XIj+AStLv8cRw=='
- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '11-Azure-Linux-Virtual-Machine/terraform-manifests'
    environmentServiceNameAzureRM: 'ARM_conn'
- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '11-Azure-Linux-Virtual-Machine/terraform-manifests'
    environmentServiceNameAzureRM: 'ARM_conn'


- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

